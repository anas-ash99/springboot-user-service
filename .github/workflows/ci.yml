name: Java CI with Maven

on:
  push:
    branches: 
      - main
      - feature/* 
  workflow_dispatch:  # Allows manual triggering of the workflow
    inputs:
      build_image:
        description: 'Check this to build the Docker image and deploy the app'
        required: true
        default: 'false'
        type: boolean
env:
  DOCKER_USERNAME: aashraf756
  DOCKER_REPO: springboot-user-service
  DEPLOYMENT_FILE_PATH: overlays/dev/user/deployment.yaml
  MANIFEST_REPO_URL: https://github.com/anas-ash99/deployment-manifest-passgenius.git
  MANIFEST_BRANCH_NAME: main
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set Image Tag
      if: github.event.inputs.build_image == 'true' || github.ref_name == 'main'
      run: |
        hash_short="${GITHUB_SHA:0:8}"
        echo "hash_short=$hash_short" >> "$GITHUB_ENV"
        echo "IMAGE_TAG=${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:$hash_short" >> "$GITHUB_ENV"
    - name: Update Kubernetes Manifest
      run: |
          echo 'Updating manifest ...'
          git clone ${{ env.MANIFEST_REPO_URL }} manifest-repo
          cd manifest-repo
          sed -i "s|image: .*|image: ${IMAGE_TAG}|" "${DEPLOYMENT_FILE_PATH}"
          git add .
          git commit -m "update image to version ${{ env.hash_short }}"
          git push origin ${{ env.MANIFEST_BRANCH_NAME }}
          cd ..
          rm -rf manifest-repo  # Clean up the cloned rep
    # - name: Set up JDK 21
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: '21'
    #     distribution: 'temurin'
    #     cache: maven
    
    # - name: Build with Maven
    #   run: mvn clean package
  
  
        
    # - name: Build Docker Image
    #   if: github.event.inputs.build_image == 'true' || github.ref_name == 'main'
    #   run: |
    #     # Build the Docker image
    #     docker build . -t $IMAGE_TAG
   
    # - name: Push Docker Image
    #   if: github.event.inputs.build_image == 'true' || github.ref_name == 'main'
    #   run: |
    #     # Log in to Docker Hub
    #     echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
    #     # Push the Docker image
    #     docker push $IMAGE_TAG
    
